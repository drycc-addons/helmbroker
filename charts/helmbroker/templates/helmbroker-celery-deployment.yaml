apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-helmbroker-celery
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: {{ .Values.celeryReplicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-helmbroker-celery
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app: drycc-helmbroker-celery
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.celery.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.celery.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.celery.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.celery.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.celery.nodeAffinityPreset.type "key" .Values.celery.nodeAffinityPreset.key "values" .Values.celery.nodeAffinityPreset.values ) | nindent 10 }}
      serviceAccount: drycc-helmbroker
      initContainers:
        - name: drycc-helmbroker-celery-init
          image: registry.drycc.cc/drycc/python-dev:latest
          imagePullPolicy: {{.Values.imagePullPolicy}}
          args:
          - netcat
          - -v
          - -u
          - http://drycc-helmbroker
        {{- include "helmbroker.envs" . | indent 10 }}
      containers:
      - name: drycc-helmbroker-celery
        image: {{$.Values.imageRegistry}}/{{$.Values.imageOrg}}/helmbroker:{{$.Values.imageTag}}
        imagePullPolicy: {{$.Values.imagePullPolicy}}
        {{- if $.Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" $.Values.diagnosticMode.command "context" $) | nindent 8 }}
        args: {{- include "common.tplvalues.render" (dict "value" $.Values.diagnosticMode.args "context" $) | nindent 8 }}
        {{- else }}
        args:
        - /bin/bash
        - -c
        - celery --app helmbroker worker --queues helmbroker.low,helmbroker.middle,helmbroker.high --autoscale=32,1 --loglevel=WARNING
        {{- end }}
        {{- with index .Values "celery" "resources" }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- include "helmbroker.envs" $ | indent 8 }}
        {{- include "helmbroker.volumeMounts" $ | indent 8 }}
      {{- include "helmbroker.volumes" . | indent 6 }}
